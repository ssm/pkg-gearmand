.TH "GEARMAN_CLIENT_DO_BACKGROUND" "3" "January 26, 2012" "0.28" "Gearmand"
.SH NAME
gearman_client_do_background \- Gearmand Documentation, http://gearman.info/
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" Man page generated from reStructeredText.
.
.SH SYNOPSIS
.sp
#include <libgearman/gearman.h>
.INDENT 0.0
.TP
.B gearman_return_t gearman_client_do_background(gearman_client_st *client, const char *function_name, const char *unique, const void *workload, size_t workload_size, char *job_handle);
.UNINDENT
.sp
Changed in version 0.21: \fBGEARMAN_PAUSE\fP will no longer be returned. A do operation will now run until it has been submitted.
.INDENT 0.0
.TP
.B gearman_return_t gearman_client_do_high_background(gearman_client_st *client, const char *function_name, const char *unique, const void *workload, size_t workload_size, gearman_job_handle_t job_handle);
.UNINDENT
.INDENT 0.0
.TP
.B gearman_return_t gearman_client_do_low_background(gearman_client_st *client, const char *function_name, const char *unique, const void *workload, size_t workload_size, gearman_job_handle_t job_handle);
.UNINDENT
.SH DESCRIPTION
.sp
\fBgearman_client_do_background()\fP executes a single request to the
gearmand server and returns the status via \fBgearman_return_t\fP.
.sp
\fBgearman_client_do_background_high()\fP and
\fBgearman_client_do_background_low()\fP are identical to
\fBgearman_client_do_background()\fP, only they set the \fBgearman_priority_t\fP to either
high or low.
.sp
If job_handle is not NULL, it will be populated with the name of the job_handle
for the task created. The job handle needs to be the size of
\fBGEARMAN_JOB_HANDLE_SIZE\fP. Please see \fBgearman_job_handle_t\fP for more information.
.SH RETURN VALUE
.sp
\fBgearman_return_t\fP
.SH EXAMPLE
.sp
.nf
.ft C
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <libgearman/gearman.h>

int main(void)
{
  gearman_client_st *client= gearman_client_create(NULL);

  gearman_return_t ret= gearman_client_add_server(client, "localhost", 0);
  if (gearman_failed(ret))
  {
    return EXIT_FAILURE;
  }

  gearman_job_handle_t job_handle;
  gearman_return_t rc= gearman_client_do_background(client,
                                                    "reverse_function",
                                                    "unique_value",
                                                    "my string to reverse", strlen("my string to reverse"),
                                                    job_handle);

  if (gearman_success(rc))
  {
    // Make use of value
    printf("%s\en", job_handle);
  }

  gearman_client_free(client);

  return 0;
}

.ft P
.fi
.SH HOME
.sp
To find out more information please check:
\fI\%http://gearman.info/\fP
.IP "See also"
.sp
\fIgearmand(8)\fP \fIlibgearman(3)\fP \fIgearman_strerror(3)\fP
.RE
.SH AUTHOR
Data Differential http://datadifferential.com/
.SH COPYRIGHT
2011, Data Differential, http://datadifferential.com/
.\" Generated by docutils manpage writer.
.\" 
.
