.TH "GEARMAN_RESULT_IS_NULL" "3" "January 26, 2012" "0.28" "Gearmand"
.SH NAME
gearman_result_is_null \- Gearmand Documentation, http://gearman.info/
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" Man page generated from reStructeredText.
.
.SH SYNOPSIS
.sp
#include <libgearman/gearman.h>
.INDENT 0.0
.TP
.B gearman_result_t
.UNINDENT
.INDENT 0.0
.TP
.B int64_t gearman_result_integer(const gearman_result_st\fI\ *self\fP)
.UNINDENT
.INDENT 0.0
.TP
.B bool gearman_result_boolean(const gearman_result_st\fI\ *self\fP)
.UNINDENT
.INDENT 0.0
.TP
.B gearman_string_t gearman_result_string(const gearman_result_st\fI\ *self\fP)
.UNINDENT
.INDENT 0.0
.TP
.B gearman_return_t gearman_result_store_string(gearman_result_st\fI\ *self\fP, gearman_string_t\fI\ arg\fP)
.UNINDENT
.INDENT 0.0
.TP
.B void gearman_result_store_integer(gearman_result_st\fI\ *self\fP, int64_t\fI\ value\fP)
.UNINDENT
.INDENT 0.0
.TP
.B gearman_return_t gearman_result_store_value(gearman_result_st\fI\ *self\fP, const void\fI\ *value\fP, size_t\fI\ size\fP)
.UNINDENT
.INDENT 0.0
.TP
.B size_t gearman_result_size(const gearman_result_st\fI\ *self\fP)
.UNINDENT
.INDENT 0.0
.TP
.B const char *gearman_result_value(const gearman_result_st\fI\ *self\fP)
.UNINDENT
.INDENT 0.0
.TP
.B bool gearman_result_is_null(const gearman_result_st\fI\ *self\fP)
.UNINDENT
.sp
Compile and link with \-lgearman
.SH DESCRIPTION
.sp
The \fBgearman_result_t()\fP type represents a result set. \fBgearman_aggregator_fn\fP is passed on these types which it uses to create a final result that is returned to the client.
.sp
\fBgearman_task_result()\fP returns \fBgearman_result_t()\fP from a \fBgearman_task_st\fP.
.sp
A \fBgearman_result_t()\fP can return the resulting value as either a char pointer, boolean, \fBgearman_string_t\fP, or int64_t.
.SH SEE ALSO
.sp
\fIgearmand(8)\fP \fIlibgearman(3)\fP \fIgearman_client_error()\fP or \fIgearman_worker_error()\fP
.SH AUTHOR
Data Differential http://datadifferential.com/
.SH COPYRIGHT
2011, Data Differential, http://datadifferential.com/
.\" Generated by docutils manpage writer.
.\" 
.
